# Generated by Django 2.2.1 on 2019-05-25 03:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Nombre')),
                ('description', models.CharField(max_length=40, verbose_name='Descripcion')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, verbose_name='Vigente')),
                ('year', models.IntegerField(default=2019, verbose_name='AÃ±o')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre del concurso')),
                ('date_from', models.DateTimeField(auto_now_add=True, verbose_name='Desde')),
                ('date_to', models.DateTimeField(verbose_name='Hasta')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_contestGroup', to='cnq.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=50, verbose_name='Cuerpo')),
                ('title', models.CharField(max_length=15, verbose_name='Titulo')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_role_choices', models.CharField(choices=[(0, 'Anonimo'), (1, 'Participant'), (2, 'Tutor'), (3, 'Mentor')], default=0, max_length=1, verbose_name='Rol')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupGroupRole', to='cnq.Group')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_userGroupRole', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='RawSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Nombre')),
                ('address', models.CharField(max_length=20, verbose_name='Direccion')),
                ('principal_name', models.CharField(max_length=10, verbose_name='Nombre del director')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupRawSchool', to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='RawProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre')),
                ('problem', models.CharField(max_length=50, verbose_name='Problema')),
                ('solution', models.CharField(max_length=50, verbose_name='Solucion')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupRawProject', to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='RawParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=10, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=10, verbose_name='Apellido')),
                ('dni', models.CharField(max_length=10, verbose_name='Dni')),
                ('email', models.EmailField(max_length=20, unique=True)),
                ('phone_number', models.CharField(max_length=30, verbose_name='Telefono')),
                ('grade_choices', models.CharField(choices=[(0, '4to'), (1, '5to'), (2, '6to'), (3, '7mo')], max_length=1)),
                ('divition_choices', models.CharField(choices=[(0, 'A'), (1, 'B'), (2, 'C')], max_length=1)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupRawParticipant', to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_categoryProjectCategory', to='cnq.Category')),
                ('raw_project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_rawprojectProjectcategory', to='cnq.RawProject')),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=50, verbose_name='Cuerpo')),
                ('group_post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_grouppostPostComment', to='cnq.GroupPost')),
                ('group_role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_grouprolePostComment', to='cnq.GroupRole')),
            ],
        ),
        migrations.CreateModel(
            name='PostAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_grouppostPostAttachment', to='cnq.GroupPost')),
            ],
        ),
        migrations.CreateModel(
            name='GroupToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_role_choices', models.CharField(choices=[(0, 'Anonimo'), (1, 'Participant'), (2, 'Tutor'), (3, 'Mentor')], default=0, max_length=1, verbose_name='Rol')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('max_uses', models.IntegerField(null=True, verbose_name='Usos maximos')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupGroupToken', to='cnq.Group')),
            ],
        ),
        migrations.AddField(
            model_name='grouppost',
            name='group_role_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_grouproleGroupPost', to='cnq.GroupRole'),
        ),
        migrations.CreateModel(
            name='GroupLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_name', models.CharField(max_length=20, verbose_name='Direccion')),
                ('street_number', models.CharField(default=0, max_length=10, verbose_name='Altura')),
                ('zip_code', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Zip')),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_cityGrouplocation', to='cnq.City')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_groupGroupLocation', to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='ContestWinner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_contestContestWinner', to='cnq.Contest')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cnq.Group')),
            ],
        ),
        migrations.CreateModel(
            name='ContestFinalist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_contestContestFinalist', to='cnq.Contest')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cnq.Group')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_stateCity', to='cnq.State'),
        ),
    ]
